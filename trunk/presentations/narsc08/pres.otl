preamble
	@author Charles R. Schmidt
	@authorShort Schmidt
	@institute Department of Geography\\San Diego State University
	@instituteShort SDSU
	@title PySOM: A Graph Based Implementation of Self-Organizing Maps
	@titleShort PySOM
	@date September 15, 2008
	@dateShort Thesis
	\definecolor{sdsu_green}{RGB}{155,200,115}
	\usecolortheme[named=sdsu_green]{structure}
	\usepackage{graphicx}
	\usepackage{subfigure}
Background
	The Self-Organizing Map
		The Self-Organizing Map
			What is the SOM
			| * Artificial Neural Network
			| * High Dimension Input Data
			| * Unsupervised Competitive Learning Process
			| * Each Neuron Models of a Portion of the Input Space
			Applications
			| * Data Visualization
			| * Data Reduction
			| * Clustering
		In Terms of Geography (Skupin 2004)
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=.8\linewidth]{skupin.png}
			| \end{figure}
			| \end{center}
		SOM as Dimensionality Reduction
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.90\linewidth]{dimensionReduction.png}
			| \end{figure}
			| \end{center}
			| \vspace{1in} (Skupin 2008)
		SOM as Clustering
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.90\linewidth]{clustering.png}
			| \end{figure}
			| \end{center}
			| (Skupin 2008)
		SOM as Clustering
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.90\linewidth]{clustermap.png}
			| \end{figure}
			| \end{center}
			| (Skupin 2008)
		SOM and GIScience
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.50\linewidth]{book.png}
			| \end{figure}
			| \end{center}
		SOM and GIScience
			| \begin{quote}
			| "translate \emph{data similarities} into \emph{spatial relationship}" 
			| \end{quote}
			| \hspace{2in} -- Helge Ritter, 1999
		Training
			Assignment and Updating
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.90\linewidth]{input.png}
			| \end{figure}
			| \end{center}
		Training
			Training
			| * Randomize input vectors
			| * Randomly Initialize the neurons
			| * Loop Until Map Converges
			| ** Grab an Input Vector
			| ** Find the Best Matching Neuron and its Neighborhood
			| ** Modify the Weights of the Neurons to Make them More Similar to the Input Vector
		Training
			Iterations
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.90\linewidth]{somtrain.png}
			| \end{figure}
			| \end{center}
	Edge Effects in SOM
		Edge Effects in SOM
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.60\linewidth]{gridedge.png}
			| \end{figure}
			| \end{center}
		Edge Effects
			In SOM
			| * Higher density of observations mapped to edge neurons
			| * Higher internal heterogeneity for edge neurons
			In Spatial Analysis
			| * Inflated nearest neighbor distances
			| * Mask the true distribution
			Components of Edge Effect
			| * True Boundary
		Suggested Solutions
			With Edges
			| * Hierarchical SOM
			| * Growing SOM
			| * Mathematical Weighting
			Without Edges
			| * Spherical SOM
			| * Toroidal SOM
		Spherical SOM
			Geodesic
			| * Most Common
			| * Highly Regular
			| * Limited Network Size
			Rakhmanov (Spherical)
			| * Rejected in Literature
			| * Less Regular
			| * No Network Size Limitation
	Objectives
		Objectives
			PySOM
			| * Testbed for different topologies
			| * Support as many topologies
			| * Open Source
PySOM
	Python
		Python
			Why Python
			| * Growing scientific community
			| * Extensive libraries
			| * Rapid development
			PySAL
			| * Python Spatial Analysis Library
			| ** 
	Design 
		Topologies
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.75\linewidth]{topos.png}
			| \end{figure}
			| \end{center}
		Graph Based Implementation of SOM
			Why
			| * Alternative topologies not available 
			| * Difficult to extend
			| * Flexibility over speed
			| ** SOM\_PAK: 90 seconds
			| ** PySOM: 45 minutes
			Graphs
			| * Topology independent
			| * Flexible
Results
	Visualization of Internal Heterogeneity
		Diagnostics
			Visualization of Internal Heterogeneity
			| * What information can be learned from a mapping of the I.H.?
		Visualization of Internal Heterogeneity
			Rectangular
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.70\linewidth]{rook_clusters.png}
			| \end{figure}
			| \end{center}
		Visualization of Internal Heterogeneity
			Hexagonal
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.70\linewidth]{hex_clusters.png}
			| \end{figure}
			| \end{center}
		Visualization of Internal Heterogeneity
			Geodesic
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.70\linewidth]{geodesic_clusters.png}
			| \end{figure}
			| \end{center}
		Visualization of Internal Heterogeneity
			Spherical
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=0.70\linewidth]{sphere_clusters.png}
			| \end{figure}
			| \end{center}
Conclusions
	Conclusions
		Key Findings
			PySOM
			| Works.
		Objective
			Question
			| Does Regularity Matter in Spherical SOM?
		Limitations
			Qualifications
			| * Only addressing how topology effects the SOM.
			| ** Does not address the benefits of having or removing the edge.
			| ** Is pushing outliers to the edges a bad thing?
		Future Directions
			Extensions
			| * Rotate sphere-based SOMs to show "central" feature
			| * Test other topologies
			| ** Remove nodes from the existing topologies
		Edge Effects in SOM
			| \begin{center}
			| \begin{figure}
			| \includegraphics[width=\linewidth]{statesSphere.png}
			| \end{figure}
			| \end{center}
